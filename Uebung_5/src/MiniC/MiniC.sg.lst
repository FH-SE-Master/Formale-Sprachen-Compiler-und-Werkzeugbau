Coco-2 SG (source: ..\MiniC\MiniC.atg)

    1| /* Comments are allowed here. COMPILER name is the same name as the file */
    2| COMPILER MiniC
    3| 
    4| SEM<<
    5|   private static String identStr;
    6|   private static int   numberVal;
    7| >>
    8| 
    9| CHARACTER SETS
   10| 	digit	    	= '0' .. '9'.
   11| 	letter		  = 'a' .. 'z' + 'A' .. 'Z' .
   12| 	whiteSpace	= CHR(9) + EOL IGNORE. /*' ' ignored by default*/
   13| 	noquote		  = ANY - '"'.
   14| 
   15| KEYWORDS
   16|   'const'. 'void'. 'main'. 'return'. 'delete'. 'new'.
   17|   'int'. 'bool'. 'false'. 'true'.
   18|   'if'. 'else'. 'while'. 'break'.
   19|   'cin'. 'cout'. 'scanf'. 'printf'.
   20| 
   21| TOKENS
   22|   ';'. ','.
   23|   '='. '+'. '-'. '++'. '--'. '/'. '*'. '%'.
   24|   '||'. '&&'. '<'. '>'. '<<'. '>>'. '<='. '>='. '=='. '!='. '!'.
   25|   '('. ')'. '['. ']'. '{'. '}'.
   26| 
   27| TOKEN CLASSES
   28|   ident  << out String identStr >> =
   29|     letter {letter | digit} LEX << identStr = tokenStr; >>.
   30|   number << out int numberVal >> =
   31|     digit {digit} LEX << numberVal=Convert.ToInt32(tokenStr); >>.
   32| 
   33| NONTERMINALS
   34|   MiniC.
   35|   VarDecl.
   36|   StatSeq.
   37|   Stat.
   38|   Expr.
   39|   Term.
   40|   Fact.
   41| 
   42| RULES
   43|   MiniC   = 'void' 'main' '(' ')' '{'  [ VarDecl ] StatSeq '}'.
   44|   VarDecl = 'int' ident<< out identStr >> { ',' ident<< out identStr >> } ';'.
   45|   StatSeq = Stat { Stat } .
   46|   Stat    = [ ident << out identStr >> '=' Expr
   47|             | 'scanf'  '(' ident<< out  identStr >> ')'
   48|             | 'printf' '(' Expr  ')'
   49|             ] ';' .
   50|   Expr    = Term { ( '+' | '-' ) Term } .
   51|   Term    = Fact { ( '*' | '/' ) Fact } .
   52|   Fact    = ident<< out identStr >> | number << out numberVal >> | '(' Expr ')' .
   53| 
   54| END MiniC.


error(s) and warning(s):
-----------------------

    0 lexical error(s) 
    0 syntax error(s)  
    0 semantic error(s)
    0 warning(s)       


start table:
-----------

   '!'                    28 | '%'                       8
   '&'                    11 | '('                      19
   ')'                    20 | '*'                       7
   '+'                    29 | ','                       3
   '-'                    30 | '/'                       6
   '0'..'9'               26 | ';'                       2
   '<'                    31 | '='                      32
   '>'                    33 | 'A'..'Z'                 25
   '['                    21 | ']'                      22
   'a'..'f'               27 | 'g'                      25
   'h'..'i'               27 | 'j'                      25
   'k'..'p'               27 | 'q'                      25
   'r'..'w'               27 | 'x'..'z'                 25
   '{'                    23 | '|'                       9
   '}'                    24 | ELSE                      0
   

ignored characters:
------------------

{ HT..LF, ' ' }

comment starts:
--------------

{ }

character classes:
-----------------

1: { '0'..'9' }

2: { 'A'..'Z', 'a'..'z' }

3: { 'a'..'f', 'h'..'i', 'k'..'p', 'r'..'w' }

4: { 'A'..'Z', 'g', 'j', 'q', 'x'..'z' }
