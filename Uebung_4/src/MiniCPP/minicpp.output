Terminals unused in grammar

   ADD
   SUBST


State 148 conflicts: 1 shift/reduce


Grammar

    0 $accept: MiniCpp $end

    1 MiniCpp: /* empty */
    2        | MiniCpp ConstDecl
    3        | MiniCpp VarDef
    4        | MiniCpp FuncDecl
    5        | MiniCpp FuncDef

    6 ConstDecl: CONST Type IDENT Init ';'

    7 Init: ASSIGN TypeVal

    8 TypeVal: FALSE
    9        | TRUE
   10        | NUMBER

   11 VarDef: Type OptAsterixList IDENT OptInit VarDefList ';'

   12 VarDefList: /* empty */
   13           | ',' OptAsterixList IDENT OptInit

   14 OptAsterixList: /* empty */
   15               | OptAsterixList ASTERIX

   16 OptInit: /* empty */
   17        | Init

   18 FuncDecl: FuncHead ';'

   19 FuncDef: FuncHead Block

   20 FuncHead: Type OptAsterixList IDENT '(' FormParList ')'

   21 FormParList: /* empty */
   22            | VOID
   23            | Type OptAsterixList IDENT OptBrackets FormParListList

   24 OptBrackets: /* empty */
   25            | '[' ']'

   26 FormParListList: /* empty */
   27                | FormParListList ',' Type OptAsterixList IDENT OptBrackets

   28 Type: VOID
   29     | BOOL
   30     | INT

   31 Block: '{' BlockList '}'

   32 BlockList: /* empty */
   33          | BlockList ConstDecl
   34          | BlockList VarDef
   35          | BlockList Stat

   36 Stat: IncStat
   37     | DecStat
   38     | AssignStat
   39     | CallStat
   40     | IfStat
   41     | WhileStat
   42     | BreakStat
   43     | InputStat
   44     | OutputStat
   45     | DeleteStat
   46     | ReturnStat
   47     | Block
   48     | ';'

   49 IncStat: IDENT INC ';'

   50 DecStat: IDENT DEC ';'

   51 AssignStat: IDENT AssignOptExpr ASSIGN Expr ';'

   52 AssignOptExpr: /* empty */
   53              | '[' Expr ']'

   54 CallStat: IDENT '(' OptActParList ')' ';'

   55 OptActParList: /* empty */
   56              | ActParList

   57 ActParList: Expr ExprList

   58 ExprList: /* empty */
   59         | ExprList ',' Expr

   60 IfStat: IF '(' Expr ')' Stat ElseStatOpt

   61 ElseStatOpt: /* empty */
   62            | ELSE Stat

   63 WhileStat: WHILE '(' Expr ')' Stat

   64 BreakStat: BREAK ';'

   65 InputStat: CIN SHIFTR IDENT ';'

   66 OutputStat: COUT SHIFTL OptOutputStat OutputStatList ';'

   67 OptOutputStat: Expr
   68              | STRING
   69              | ENDL

   70 OutputStatList: /* empty */
   71               | OutputStatList SHIFTL OptOutputStat

   72 DeleteStat: DELETE '[' ']' IDENT ';'

   73 ReturnStat: RETURN OptExpr ';'

   74 OptExpr: /* empty */
   75        | Expr

   76 Expr: OrExpr

   77 OrExpr: AndExpr OrExprList

   78 OrExprList: /* empty */
   79           | OrExprList OR AndExpr

   80 AndExpr: RelExpr AndExprList

   81 AndExprList: /* empty */
   82            | AndExprList AND RelExpr

   83 RelExpr: SimpleExpr OptRelExpr

   84 OptRelExpr: /* empty */
   85           | OptOperator SimpleExpr

   86 OptOperator: EQ
   87            | NEQ
   88            | LT
   89            | LE
   90            | GT
   91            | GE

   92 SimpleExpr: OptSign Term SimpleExprList

   93 Sign: PLUS
   94     | MINUS

   95 OptSign: /* empty */
   96        | Sign

   97 SimpleExprList: /* empty */
   98               | SimpleExprList Sign Term

   99 Term: NotFact TermList

  100 TermList: /* empty */
  101         | TermList OptNotFactOperator NotFact

  102 OptNotFactOperator: ASTERIX
  103                   | DIV
  104                   | MOD

  105 NotFact: OptCallSign Fact

  106 OptCallSign: /* empty */
  107            | SIGNCALL

  108 Fact: FALSE
  109     | TRUE
  110     | NUMBER
  111     | IDENT OptIdentFact
  112     | NEW Type '[' Expr ']'
  113     | '(' Expr ')'

  114 OptIdentFact: /* empty */
  115             | '[' Expr ']'
  116             | '(' OptActParList ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20 54 60 63 113 116
')' (41) 20 54 60 63 113 116
',' (44) 13 27 59
';' (59) 6 11 18 48 49 50 51 54 64 65 66 72 73
'[' (91) 25 53 72 112 115
']' (93) 25 53 72 112 115
'{' (123) 31
'}' (125) 31
error (256)
VOID (258) 22 28
INT (259) 30
BOOL (260) 29
STRING (261) 68
COUT (262) 66
CIN (263) 65
ENDL (264) 69
IDENT (265) 6 11 13 20 23 27 49 50 51 54 65 72 111
NUMBER (266) 10 110
TRUE (267) 9 109
FALSE (268) 8 108
CONST (269) 6
IF (270) 60
ELSE (271) 62
WHILE (272) 63
BREAK (273) 64
RETURN (274) 73
NEW (275) 112
DELETE (276) 72
OR (277) 79
AND (278) 82
SHIFTR (279) 65
SHIFTL (280) 66 71
ASSIGN (281) 7 51
NEQ (282) 87
EQ (283) 86
LE (284) 89
GE (285) 91
INC (286) 49
DEC (287) 50
ADD (288)
SUBST (289)
LT (290) 88
GT (291) 90
PLUS (292) 93
MINUS (293) 94
ASTERIX (294) 15 102
DIV (295) 103
MOD (296) 104
SIGNCALL (297) 107


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
MiniCpp (52)
    on left: 1 2 3 4 5, on right: 0 2 3 4 5
ConstDecl (53)
    on left: 6, on right: 2 33
Init (54)
    on left: 7, on right: 6 17
TypeVal (55)
    on left: 8 9 10, on right: 7
VarDef (56)
    on left: 11, on right: 3 34
VarDefList (57)
    on left: 12 13, on right: 11
OptAsterixList (58)
    on left: 14 15, on right: 11 13 15 20 23 27
OptInit (59)
    on left: 16 17, on right: 11 13
FuncDecl (60)
    on left: 18, on right: 4
FuncDef (61)
    on left: 19, on right: 5
FuncHead (62)
    on left: 20, on right: 18 19
FormParList (63)
    on left: 21 22 23, on right: 20
OptBrackets (64)
    on left: 24 25, on right: 23 27
FormParListList (65)
    on left: 26 27, on right: 23 27
Type (66)
    on left: 28 29 30, on right: 6 11 20 23 27 112
Block (67)
    on left: 31, on right: 19 47
BlockList (68)
    on left: 32 33 34 35, on right: 31 33 34 35
Stat (69)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48, on right: 35 60
    62 63
IncStat (70)
    on left: 49, on right: 36
DecStat (71)
    on left: 50, on right: 37
AssignStat (72)
    on left: 51, on right: 38
AssignOptExpr (73)
    on left: 52 53, on right: 51
CallStat (74)
    on left: 54, on right: 39
OptActParList (75)
    on left: 55 56, on right: 54 116
ActParList (76)
    on left: 57, on right: 56
ExprList (77)
    on left: 58 59, on right: 57 59
IfStat (78)
    on left: 60, on right: 40
ElseStatOpt (79)
    on left: 61 62, on right: 60
WhileStat (80)
    on left: 63, on right: 41
BreakStat (81)
    on left: 64, on right: 42
InputStat (82)
    on left: 65, on right: 43
OutputStat (83)
    on left: 66, on right: 44
OptOutputStat (84)
    on left: 67 68 69, on right: 66 71
OutputStatList (85)
    on left: 70 71, on right: 66 71
DeleteStat (86)
    on left: 72, on right: 45
ReturnStat (87)
    on left: 73, on right: 46
OptExpr (88)
    on left: 74 75, on right: 73
Expr (89)
    on left: 76, on right: 51 53 57 59 60 63 67 75 112 113 115
OrExpr (90)
    on left: 77, on right: 76
OrExprList (91)
    on left: 78 79, on right: 77 79
AndExpr (92)
    on left: 80, on right: 77 79
AndExprList (93)
    on left: 81 82, on right: 80 82
RelExpr (94)
    on left: 83, on right: 80 82
OptRelExpr (95)
    on left: 84 85, on right: 83
OptOperator (96)
    on left: 86 87 88 89 90 91, on right: 85
SimpleExpr (97)
    on left: 92, on right: 83 85
Sign (98)
    on left: 93 94, on right: 96 98
OptSign (99)
    on left: 95 96, on right: 92
SimpleExprList (100)
    on left: 97 98, on right: 92 98
Term (101)
    on left: 99, on right: 92 98
TermList (102)
    on left: 100 101, on right: 99 101
OptNotFactOperator (103)
    on left: 102 103 104, on right: 101
NotFact (104)
    on left: 105, on right: 99 101
OptCallSign (105)
    on left: 106 107, on right: 105
Fact (106)
    on left: 108 109 110 111 112 113, on right: 105
OptIdentFact (107)
    on left: 114 115 116, on right: 111


State 0

    0 $accept: . MiniCpp $end

    $default  reduce using rule 1 (MiniCpp)

    MiniCpp  go to state 1


State 1

    0 $accept: MiniCpp . $end
    2 MiniCpp: MiniCpp . ConstDecl
    3        | MiniCpp . VarDef
    4        | MiniCpp . FuncDecl
    5        | MiniCpp . FuncDef

    $end   shift, and go to state 2
    VOID   shift, and go to state 3
    INT    shift, and go to state 4
    BOOL   shift, and go to state 5
    CONST  shift, and go to state 6

    ConstDecl  go to state 7
    VarDef     go to state 8
    FuncDecl   go to state 9
    FuncDef    go to state 10
    FuncHead   go to state 11
    Type       go to state 12


State 2

    0 $accept: MiniCpp $end .

    $default  accept


State 3

   28 Type: VOID .

    $default  reduce using rule 28 (Type)


State 4

   30 Type: INT .

    $default  reduce using rule 30 (Type)


State 5

   29 Type: BOOL .

    $default  reduce using rule 29 (Type)


State 6

    6 ConstDecl: CONST . Type IDENT Init ';'

    VOID  shift, and go to state 3
    INT   shift, and go to state 4
    BOOL  shift, and go to state 5

    Type  go to state 13


State 7

    2 MiniCpp: MiniCpp ConstDecl .

    $default  reduce using rule 2 (MiniCpp)


State 8

    3 MiniCpp: MiniCpp VarDef .

    $default  reduce using rule 3 (MiniCpp)


State 9

    4 MiniCpp: MiniCpp FuncDecl .

    $default  reduce using rule 4 (MiniCpp)


State 10

    5 MiniCpp: MiniCpp FuncDef .

    $default  reduce using rule 5 (MiniCpp)


State 11

   18 FuncDecl: FuncHead . ';'
   19 FuncDef: FuncHead . Block

    ';'  shift, and go to state 14
    '{'  shift, and go to state 15

    Block  go to state 16


State 12

   11 VarDef: Type . OptAsterixList IDENT OptInit VarDefList ';'
   20 FuncHead: Type . OptAsterixList IDENT '(' FormParList ')'

    $default  reduce using rule 14 (OptAsterixList)

    OptAsterixList  go to state 17


State 13

    6 ConstDecl: CONST Type . IDENT Init ';'

    IDENT  shift, and go to state 18


State 14

   18 FuncDecl: FuncHead ';' .

    $default  reduce using rule 18 (FuncDecl)


State 15

   31 Block: '{' . BlockList '}'

    $default  reduce using rule 32 (BlockList)

    BlockList  go to state 19


State 16

   19 FuncDef: FuncHead Block .

    $default  reduce using rule 19 (FuncDef)


State 17

   11 VarDef: Type OptAsterixList . IDENT OptInit VarDefList ';'
   15 OptAsterixList: OptAsterixList . ASTERIX
   20 FuncHead: Type OptAsterixList . IDENT '(' FormParList ')'

    IDENT    shift, and go to state 20
    ASTERIX  shift, and go to state 21


State 18

    6 ConstDecl: CONST Type IDENT . Init ';'

    ASSIGN  shift, and go to state 22

    Init  go to state 23


State 19

   31 Block: '{' BlockList . '}'
   33 BlockList: BlockList . ConstDecl
   34          | BlockList . VarDef
   35          | BlockList . Stat

    VOID    shift, and go to state 3
    INT     shift, and go to state 4
    BOOL    shift, and go to state 5
    COUT    shift, and go to state 24
    CIN     shift, and go to state 25
    IDENT   shift, and go to state 26
    CONST   shift, and go to state 6
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    RETURN  shift, and go to state 30
    DELETE  shift, and go to state 31
    ';'     shift, and go to state 32
    '{'     shift, and go to state 15
    '}'     shift, and go to state 33

    ConstDecl   go to state 34
    VarDef      go to state 35
    Type        go to state 36
    Block       go to state 37
    Stat        go to state 38
    IncStat     go to state 39
    DecStat     go to state 40
    AssignStat  go to state 41
    CallStat    go to state 42
    IfStat      go to state 43
    WhileStat   go to state 44
    BreakStat   go to state 45
    InputStat   go to state 46
    OutputStat  go to state 47
    DeleteStat  go to state 48
    ReturnStat  go to state 49


State 20

   11 VarDef: Type OptAsterixList IDENT . OptInit VarDefList ';'
   20 FuncHead: Type OptAsterixList IDENT . '(' FormParList ')'

    ASSIGN  shift, and go to state 22
    '('     shift, and go to state 50

    $default  reduce using rule 16 (OptInit)

    Init     go to state 51
    OptInit  go to state 52


State 21

   15 OptAsterixList: OptAsterixList ASTERIX .

    $default  reduce using rule 15 (OptAsterixList)


State 22

    7 Init: ASSIGN . TypeVal

    NUMBER  shift, and go to state 53
    TRUE    shift, and go to state 54
    FALSE   shift, and go to state 55

    TypeVal  go to state 56


State 23

    6 ConstDecl: CONST Type IDENT Init . ';'

    ';'  shift, and go to state 57


State 24

   66 OutputStat: COUT . SHIFTL OptOutputStat OutputStatList ';'

    SHIFTL  shift, and go to state 58


State 25

   65 InputStat: CIN . SHIFTR IDENT ';'

    SHIFTR  shift, and go to state 59


State 26

   49 IncStat: IDENT . INC ';'
   50 DecStat: IDENT . DEC ';'
   51 AssignStat: IDENT . AssignOptExpr ASSIGN Expr ';'
   54 CallStat: IDENT . '(' OptActParList ')' ';'

    INC  shift, and go to state 60
    DEC  shift, and go to state 61
    '('  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 52 (AssignOptExpr)

    AssignOptExpr  go to state 64


State 27

   60 IfStat: IF . '(' Expr ')' Stat ElseStatOpt

    '('  shift, and go to state 65


State 28

   63 WhileStat: WHILE . '(' Expr ')' Stat

    '('  shift, and go to state 66


State 29

   64 BreakStat: BREAK . ';'

    ';'  shift, and go to state 67


State 30

   73 ReturnStat: RETURN . OptExpr ';'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    ';'       reduce using rule 74 (OptExpr)
    $default  reduce using rule 95 (OptSign)

    OptExpr     go to state 70
    Expr        go to state 71
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 31

   72 DeleteStat: DELETE . '[' ']' IDENT ';'

    '['  shift, and go to state 78


State 32

   48 Stat: ';' .

    $default  reduce using rule 48 (Stat)


State 33

   31 Block: '{' BlockList '}' .

    $default  reduce using rule 31 (Block)


State 34

   33 BlockList: BlockList ConstDecl .

    $default  reduce using rule 33 (BlockList)


State 35

   34 BlockList: BlockList VarDef .

    $default  reduce using rule 34 (BlockList)


State 36

   11 VarDef: Type . OptAsterixList IDENT OptInit VarDefList ';'

    $default  reduce using rule 14 (OptAsterixList)

    OptAsterixList  go to state 79


State 37

   47 Stat: Block .

    $default  reduce using rule 47 (Stat)


State 38

   35 BlockList: BlockList Stat .

    $default  reduce using rule 35 (BlockList)


State 39

   36 Stat: IncStat .

    $default  reduce using rule 36 (Stat)


State 40

   37 Stat: DecStat .

    $default  reduce using rule 37 (Stat)


State 41

   38 Stat: AssignStat .

    $default  reduce using rule 38 (Stat)


State 42

   39 Stat: CallStat .

    $default  reduce using rule 39 (Stat)


State 43

   40 Stat: IfStat .

    $default  reduce using rule 40 (Stat)


State 44

   41 Stat: WhileStat .

    $default  reduce using rule 41 (Stat)


State 45

   42 Stat: BreakStat .

    $default  reduce using rule 42 (Stat)


State 46

   43 Stat: InputStat .

    $default  reduce using rule 43 (Stat)


State 47

   44 Stat: OutputStat .

    $default  reduce using rule 44 (Stat)


State 48

   45 Stat: DeleteStat .

    $default  reduce using rule 45 (Stat)


State 49

   46 Stat: ReturnStat .

    $default  reduce using rule 46 (Stat)


State 50

   20 FuncHead: Type OptAsterixList IDENT '(' . FormParList ')'

    VOID  shift, and go to state 80
    INT   shift, and go to state 4
    BOOL  shift, and go to state 5

    $default  reduce using rule 21 (FormParList)

    FormParList  go to state 81
    Type         go to state 82


State 51

   17 OptInit: Init .

    $default  reduce using rule 17 (OptInit)


State 52

   11 VarDef: Type OptAsterixList IDENT OptInit . VarDefList ';'

    ','  shift, and go to state 83

    $default  reduce using rule 12 (VarDefList)

    VarDefList  go to state 84


State 53

   10 TypeVal: NUMBER .

    $default  reduce using rule 10 (TypeVal)


State 54

    9 TypeVal: TRUE .

    $default  reduce using rule 9 (TypeVal)


State 55

    8 TypeVal: FALSE .

    $default  reduce using rule 8 (TypeVal)


State 56

    7 Init: ASSIGN TypeVal .

    $default  reduce using rule 7 (Init)


State 57

    6 ConstDecl: CONST Type IDENT Init ';' .

    $default  reduce using rule 6 (ConstDecl)


State 58

   66 OutputStat: COUT SHIFTL . OptOutputStat OutputStatList ';'

    STRING  shift, and go to state 85
    ENDL    shift, and go to state 86
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    OptOutputStat  go to state 87
    Expr           go to state 88
    OrExpr         go to state 72
    AndExpr        go to state 73
    RelExpr        go to state 74
    SimpleExpr     go to state 75
    Sign           go to state 76
    OptSign        go to state 77


State 59

   65 InputStat: CIN SHIFTR . IDENT ';'

    IDENT  shift, and go to state 89


State 60

   49 IncStat: IDENT INC . ';'

    ';'  shift, and go to state 90


State 61

   50 DecStat: IDENT DEC . ';'

    ';'  shift, and go to state 91


State 62

   54 CallStat: IDENT '(' . OptActParList ')' ';'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    ')'       reduce using rule 55 (OptActParList)
    $default  reduce using rule 95 (OptSign)

    OptActParList  go to state 92
    ActParList     go to state 93
    Expr           go to state 94
    OrExpr         go to state 72
    AndExpr        go to state 73
    RelExpr        go to state 74
    SimpleExpr     go to state 75
    Sign           go to state 76
    OptSign        go to state 77


State 63

   53 AssignOptExpr: '[' . Expr ']'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 95
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 64

   51 AssignStat: IDENT AssignOptExpr . ASSIGN Expr ';'

    ASSIGN  shift, and go to state 96


State 65

   60 IfStat: IF '(' . Expr ')' Stat ElseStatOpt

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 97
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 66

   63 WhileStat: WHILE '(' . Expr ')' Stat

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 98
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 67

   64 BreakStat: BREAK ';' .

    $default  reduce using rule 64 (BreakStat)


State 68

   93 Sign: PLUS .

    $default  reduce using rule 93 (Sign)


State 69

   94 Sign: MINUS .

    $default  reduce using rule 94 (Sign)


State 70

   73 ReturnStat: RETURN OptExpr . ';'

    ';'  shift, and go to state 99


State 71

   75 OptExpr: Expr .

    $default  reduce using rule 75 (OptExpr)


State 72

   76 Expr: OrExpr .

    $default  reduce using rule 76 (Expr)


State 73

   77 OrExpr: AndExpr . OrExprList

    $default  reduce using rule 78 (OrExprList)

    OrExprList  go to state 100


State 74

   80 AndExpr: RelExpr . AndExprList

    $default  reduce using rule 81 (AndExprList)

    AndExprList  go to state 101


State 75

   83 RelExpr: SimpleExpr . OptRelExpr

    NEQ  shift, and go to state 102
    EQ   shift, and go to state 103
    LE   shift, and go to state 104
    GE   shift, and go to state 105
    LT   shift, and go to state 106
    GT   shift, and go to state 107

    $default  reduce using rule 84 (OptRelExpr)

    OptRelExpr   go to state 108
    OptOperator  go to state 109


State 76

   96 OptSign: Sign .

    $default  reduce using rule 96 (OptSign)


State 77

   92 SimpleExpr: OptSign . Term SimpleExprList

    SIGNCALL  shift, and go to state 110

    $default  reduce using rule 106 (OptCallSign)

    Term         go to state 111
    NotFact      go to state 112
    OptCallSign  go to state 113


State 78

   72 DeleteStat: DELETE '[' . ']' IDENT ';'

    ']'  shift, and go to state 114


State 79

   11 VarDef: Type OptAsterixList . IDENT OptInit VarDefList ';'
   15 OptAsterixList: OptAsterixList . ASTERIX

    IDENT    shift, and go to state 115
    ASTERIX  shift, and go to state 21


State 80

   22 FormParList: VOID .
   28 Type: VOID .

    ')'       reduce using rule 22 (FormParList)
    $default  reduce using rule 28 (Type)


State 81

   20 FuncHead: Type OptAsterixList IDENT '(' FormParList . ')'

    ')'  shift, and go to state 116


State 82

   23 FormParList: Type . OptAsterixList IDENT OptBrackets FormParListList

    $default  reduce using rule 14 (OptAsterixList)

    OptAsterixList  go to state 117


State 83

   13 VarDefList: ',' . OptAsterixList IDENT OptInit

    $default  reduce using rule 14 (OptAsterixList)

    OptAsterixList  go to state 118


State 84

   11 VarDef: Type OptAsterixList IDENT OptInit VarDefList . ';'

    ';'  shift, and go to state 119


State 85

   68 OptOutputStat: STRING .

    $default  reduce using rule 68 (OptOutputStat)


State 86

   69 OptOutputStat: ENDL .

    $default  reduce using rule 69 (OptOutputStat)


State 87

   66 OutputStat: COUT SHIFTL OptOutputStat . OutputStatList ';'

    $default  reduce using rule 70 (OutputStatList)

    OutputStatList  go to state 120


State 88

   67 OptOutputStat: Expr .

    $default  reduce using rule 67 (OptOutputStat)


State 89

   65 InputStat: CIN SHIFTR IDENT . ';'

    ';'  shift, and go to state 121


State 90

   49 IncStat: IDENT INC ';' .

    $default  reduce using rule 49 (IncStat)


State 91

   50 DecStat: IDENT DEC ';' .

    $default  reduce using rule 50 (DecStat)


State 92

   54 CallStat: IDENT '(' OptActParList . ')' ';'

    ')'  shift, and go to state 122


State 93

   56 OptActParList: ActParList .

    $default  reduce using rule 56 (OptActParList)


State 94

   57 ActParList: Expr . ExprList

    $default  reduce using rule 58 (ExprList)

    ExprList  go to state 123


State 95

   53 AssignOptExpr: '[' Expr . ']'

    ']'  shift, and go to state 124


State 96

   51 AssignStat: IDENT AssignOptExpr ASSIGN . Expr ';'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 125
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 97

   60 IfStat: IF '(' Expr . ')' Stat ElseStatOpt

    ')'  shift, and go to state 126


State 98

   63 WhileStat: WHILE '(' Expr . ')' Stat

    ')'  shift, and go to state 127


State 99

   73 ReturnStat: RETURN OptExpr ';' .

    $default  reduce using rule 73 (ReturnStat)


State 100

   77 OrExpr: AndExpr OrExprList .
   79 OrExprList: OrExprList . OR AndExpr

    OR  shift, and go to state 128

    $default  reduce using rule 77 (OrExpr)


State 101

   80 AndExpr: RelExpr AndExprList .
   82 AndExprList: AndExprList . AND RelExpr

    AND  shift, and go to state 129

    $default  reduce using rule 80 (AndExpr)


State 102

   87 OptOperator: NEQ .

    $default  reduce using rule 87 (OptOperator)


State 103

   86 OptOperator: EQ .

    $default  reduce using rule 86 (OptOperator)


State 104

   89 OptOperator: LE .

    $default  reduce using rule 89 (OptOperator)


State 105

   91 OptOperator: GE .

    $default  reduce using rule 91 (OptOperator)


State 106

   88 OptOperator: LT .

    $default  reduce using rule 88 (OptOperator)


State 107

   90 OptOperator: GT .

    $default  reduce using rule 90 (OptOperator)


State 108

   83 RelExpr: SimpleExpr OptRelExpr .

    $default  reduce using rule 83 (RelExpr)


State 109

   85 OptRelExpr: OptOperator . SimpleExpr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    SimpleExpr  go to state 130
    Sign        go to state 76
    OptSign     go to state 77


State 110

  107 OptCallSign: SIGNCALL .

    $default  reduce using rule 107 (OptCallSign)


State 111

   92 SimpleExpr: OptSign Term . SimpleExprList

    $default  reduce using rule 97 (SimpleExprList)

    SimpleExprList  go to state 131


State 112

   99 Term: NotFact . TermList

    $default  reduce using rule 100 (TermList)

    TermList  go to state 132


State 113

  105 NotFact: OptCallSign . Fact

    IDENT   shift, and go to state 133
    NUMBER  shift, and go to state 134
    TRUE    shift, and go to state 135
    FALSE   shift, and go to state 136
    NEW     shift, and go to state 137
    '('     shift, and go to state 138

    Fact  go to state 139


State 114

   72 DeleteStat: DELETE '[' ']' . IDENT ';'

    IDENT  shift, and go to state 140


State 115

   11 VarDef: Type OptAsterixList IDENT . OptInit VarDefList ';'

    ASSIGN  shift, and go to state 22

    $default  reduce using rule 16 (OptInit)

    Init     go to state 51
    OptInit  go to state 52


State 116

   20 FuncHead: Type OptAsterixList IDENT '(' FormParList ')' .

    $default  reduce using rule 20 (FuncHead)


State 117

   15 OptAsterixList: OptAsterixList . ASTERIX
   23 FormParList: Type OptAsterixList . IDENT OptBrackets FormParListList

    IDENT    shift, and go to state 141
    ASTERIX  shift, and go to state 21


State 118

   13 VarDefList: ',' OptAsterixList . IDENT OptInit
   15 OptAsterixList: OptAsterixList . ASTERIX

    IDENT    shift, and go to state 142
    ASTERIX  shift, and go to state 21


State 119

   11 VarDef: Type OptAsterixList IDENT OptInit VarDefList ';' .

    $default  reduce using rule 11 (VarDef)


State 120

   66 OutputStat: COUT SHIFTL OptOutputStat OutputStatList . ';'
   71 OutputStatList: OutputStatList . SHIFTL OptOutputStat

    SHIFTL  shift, and go to state 143
    ';'     shift, and go to state 144


State 121

   65 InputStat: CIN SHIFTR IDENT ';' .

    $default  reduce using rule 65 (InputStat)


State 122

   54 CallStat: IDENT '(' OptActParList ')' . ';'

    ';'  shift, and go to state 145


State 123

   57 ActParList: Expr ExprList .
   59 ExprList: ExprList . ',' Expr

    ','  shift, and go to state 146

    $default  reduce using rule 57 (ActParList)


State 124

   53 AssignOptExpr: '[' Expr ']' .

    $default  reduce using rule 53 (AssignOptExpr)


State 125

   51 AssignStat: IDENT AssignOptExpr ASSIGN Expr . ';'

    ';'  shift, and go to state 147


State 126

   60 IfStat: IF '(' Expr ')' . Stat ElseStatOpt

    COUT    shift, and go to state 24
    CIN     shift, and go to state 25
    IDENT   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    RETURN  shift, and go to state 30
    DELETE  shift, and go to state 31
    ';'     shift, and go to state 32
    '{'     shift, and go to state 15

    Block       go to state 37
    Stat        go to state 148
    IncStat     go to state 39
    DecStat     go to state 40
    AssignStat  go to state 41
    CallStat    go to state 42
    IfStat      go to state 43
    WhileStat   go to state 44
    BreakStat   go to state 45
    InputStat   go to state 46
    OutputStat  go to state 47
    DeleteStat  go to state 48
    ReturnStat  go to state 49


State 127

   63 WhileStat: WHILE '(' Expr ')' . Stat

    COUT    shift, and go to state 24
    CIN     shift, and go to state 25
    IDENT   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    RETURN  shift, and go to state 30
    DELETE  shift, and go to state 31
    ';'     shift, and go to state 32
    '{'     shift, and go to state 15

    Block       go to state 37
    Stat        go to state 149
    IncStat     go to state 39
    DecStat     go to state 40
    AssignStat  go to state 41
    CallStat    go to state 42
    IfStat      go to state 43
    WhileStat   go to state 44
    BreakStat   go to state 45
    InputStat   go to state 46
    OutputStat  go to state 47
    DeleteStat  go to state 48
    ReturnStat  go to state 49


State 128

   79 OrExprList: OrExprList OR . AndExpr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    AndExpr     go to state 150
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 129

   82 AndExprList: AndExprList AND . RelExpr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    RelExpr     go to state 151
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 130

   85 OptRelExpr: OptOperator SimpleExpr .

    $default  reduce using rule 85 (OptRelExpr)


State 131

   92 SimpleExpr: OptSign Term SimpleExprList .
   98 SimpleExprList: SimpleExprList . Sign Term

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 92 (SimpleExpr)

    Sign  go to state 152


State 132

   99 Term: NotFact TermList .
  101 TermList: TermList . OptNotFactOperator NotFact

    ASTERIX  shift, and go to state 153
    DIV      shift, and go to state 154
    MOD      shift, and go to state 155

    $default  reduce using rule 99 (Term)

    OptNotFactOperator  go to state 156


State 133

  111 Fact: IDENT . OptIdentFact

    '('  shift, and go to state 157
    '['  shift, and go to state 158

    $default  reduce using rule 114 (OptIdentFact)

    OptIdentFact  go to state 159


State 134

  110 Fact: NUMBER .

    $default  reduce using rule 110 (Fact)


State 135

  109 Fact: TRUE .

    $default  reduce using rule 109 (Fact)


State 136

  108 Fact: FALSE .

    $default  reduce using rule 108 (Fact)


State 137

  112 Fact: NEW . Type '[' Expr ']'

    VOID  shift, and go to state 3
    INT   shift, and go to state 4
    BOOL  shift, and go to state 5

    Type  go to state 160


State 138

  113 Fact: '(' . Expr ')'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 161
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 139

  105 NotFact: OptCallSign Fact .

    $default  reduce using rule 105 (NotFact)


State 140

   72 DeleteStat: DELETE '[' ']' IDENT . ';'

    ';'  shift, and go to state 162


State 141

   23 FormParList: Type OptAsterixList IDENT . OptBrackets FormParListList

    '['  shift, and go to state 163

    $default  reduce using rule 24 (OptBrackets)

    OptBrackets  go to state 164


State 142

   13 VarDefList: ',' OptAsterixList IDENT . OptInit

    ASSIGN  shift, and go to state 22

    $default  reduce using rule 16 (OptInit)

    Init     go to state 51
    OptInit  go to state 165


State 143

   71 OutputStatList: OutputStatList SHIFTL . OptOutputStat

    STRING  shift, and go to state 85
    ENDL    shift, and go to state 86
    PLUS    shift, and go to state 68
    MINUS   shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    OptOutputStat  go to state 166
    Expr           go to state 88
    OrExpr         go to state 72
    AndExpr        go to state 73
    RelExpr        go to state 74
    SimpleExpr     go to state 75
    Sign           go to state 76
    OptSign        go to state 77


State 144

   66 OutputStat: COUT SHIFTL OptOutputStat OutputStatList ';' .

    $default  reduce using rule 66 (OutputStat)


State 145

   54 CallStat: IDENT '(' OptActParList ')' ';' .

    $default  reduce using rule 54 (CallStat)


State 146

   59 ExprList: ExprList ',' . Expr

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 167
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 147

   51 AssignStat: IDENT AssignOptExpr ASSIGN Expr ';' .

    $default  reduce using rule 51 (AssignStat)


State 148

   60 IfStat: IF '(' Expr ')' Stat . ElseStatOpt

    ELSE  shift, and go to state 168

    ELSE      [reduce using rule 61 (ElseStatOpt)]
    $default  reduce using rule 61 (ElseStatOpt)

    ElseStatOpt  go to state 169


State 149

   63 WhileStat: WHILE '(' Expr ')' Stat .

    $default  reduce using rule 63 (WhileStat)


State 150

   79 OrExprList: OrExprList OR AndExpr .

    $default  reduce using rule 79 (OrExprList)


State 151

   82 AndExprList: AndExprList AND RelExpr .

    $default  reduce using rule 82 (AndExprList)


State 152

   98 SimpleExprList: SimpleExprList Sign . Term

    SIGNCALL  shift, and go to state 110

    $default  reduce using rule 106 (OptCallSign)

    Term         go to state 170
    NotFact      go to state 112
    OptCallSign  go to state 113


State 153

  102 OptNotFactOperator: ASTERIX .

    $default  reduce using rule 102 (OptNotFactOperator)


State 154

  103 OptNotFactOperator: DIV .

    $default  reduce using rule 103 (OptNotFactOperator)


State 155

  104 OptNotFactOperator: MOD .

    $default  reduce using rule 104 (OptNotFactOperator)


State 156

  101 TermList: TermList OptNotFactOperator . NotFact

    SIGNCALL  shift, and go to state 110

    $default  reduce using rule 106 (OptCallSign)

    NotFact      go to state 171
    OptCallSign  go to state 113


State 157

  116 OptIdentFact: '(' . OptActParList ')'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    ')'       reduce using rule 55 (OptActParList)
    $default  reduce using rule 95 (OptSign)

    OptActParList  go to state 172
    ActParList     go to state 93
    Expr           go to state 94
    OrExpr         go to state 72
    AndExpr        go to state 73
    RelExpr        go to state 74
    SimpleExpr     go to state 75
    Sign           go to state 76
    OptSign        go to state 77


State 158

  115 OptIdentFact: '[' . Expr ']'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 173
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 159

  111 Fact: IDENT OptIdentFact .

    $default  reduce using rule 111 (Fact)


State 160

  112 Fact: NEW Type . '[' Expr ']'

    '['  shift, and go to state 174


State 161

  113 Fact: '(' Expr . ')'

    ')'  shift, and go to state 175


State 162

   72 DeleteStat: DELETE '[' ']' IDENT ';' .

    $default  reduce using rule 72 (DeleteStat)


State 163

   25 OptBrackets: '[' . ']'

    ']'  shift, and go to state 176


State 164

   23 FormParList: Type OptAsterixList IDENT OptBrackets . FormParListList

    $default  reduce using rule 26 (FormParListList)

    FormParListList  go to state 177


State 165

   13 VarDefList: ',' OptAsterixList IDENT OptInit .

    $default  reduce using rule 13 (VarDefList)


State 166

   71 OutputStatList: OutputStatList SHIFTL OptOutputStat .

    $default  reduce using rule 71 (OutputStatList)


State 167

   59 ExprList: ExprList ',' Expr .

    $default  reduce using rule 59 (ExprList)


State 168

   62 ElseStatOpt: ELSE . Stat

    COUT    shift, and go to state 24
    CIN     shift, and go to state 25
    IDENT   shift, and go to state 26
    IF      shift, and go to state 27
    WHILE   shift, and go to state 28
    BREAK   shift, and go to state 29
    RETURN  shift, and go to state 30
    DELETE  shift, and go to state 31
    ';'     shift, and go to state 32
    '{'     shift, and go to state 15

    Block       go to state 37
    Stat        go to state 178
    IncStat     go to state 39
    DecStat     go to state 40
    AssignStat  go to state 41
    CallStat    go to state 42
    IfStat      go to state 43
    WhileStat   go to state 44
    BreakStat   go to state 45
    InputStat   go to state 46
    OutputStat  go to state 47
    DeleteStat  go to state 48
    ReturnStat  go to state 49


State 169

   60 IfStat: IF '(' Expr ')' Stat ElseStatOpt .

    $default  reduce using rule 60 (IfStat)


State 170

   98 SimpleExprList: SimpleExprList Sign Term .

    $default  reduce using rule 98 (SimpleExprList)


State 171

  101 TermList: TermList OptNotFactOperator NotFact .

    $default  reduce using rule 101 (TermList)


State 172

  116 OptIdentFact: '(' OptActParList . ')'

    ')'  shift, and go to state 179


State 173

  115 OptIdentFact: '[' Expr . ']'

    ']'  shift, and go to state 180


State 174

  112 Fact: NEW Type '[' . Expr ']'

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69

    $default  reduce using rule 95 (OptSign)

    Expr        go to state 181
    OrExpr      go to state 72
    AndExpr     go to state 73
    RelExpr     go to state 74
    SimpleExpr  go to state 75
    Sign        go to state 76
    OptSign     go to state 77


State 175

  113 Fact: '(' Expr ')' .

    $default  reduce using rule 113 (Fact)


State 176

   25 OptBrackets: '[' ']' .

    $default  reduce using rule 25 (OptBrackets)


State 177

   23 FormParList: Type OptAsterixList IDENT OptBrackets FormParListList .
   27 FormParListList: FormParListList . ',' Type OptAsterixList IDENT OptBrackets

    ','  shift, and go to state 182

    $default  reduce using rule 23 (FormParList)


State 178

   62 ElseStatOpt: ELSE Stat .

    $default  reduce using rule 62 (ElseStatOpt)


State 179

  116 OptIdentFact: '(' OptActParList ')' .

    $default  reduce using rule 116 (OptIdentFact)


State 180

  115 OptIdentFact: '[' Expr ']' .

    $default  reduce using rule 115 (OptIdentFact)


State 181

  112 Fact: NEW Type '[' Expr . ']'

    ']'  shift, and go to state 183


State 182

   27 FormParListList: FormParListList ',' . Type OptAsterixList IDENT OptBrackets

    VOID  shift, and go to state 3
    INT   shift, and go to state 4
    BOOL  shift, and go to state 5

    Type  go to state 184


State 183

  112 Fact: NEW Type '[' Expr ']' .

    $default  reduce using rule 112 (Fact)


State 184

   27 FormParListList: FormParListList ',' Type . OptAsterixList IDENT OptBrackets

    $default  reduce using rule 14 (OptAsterixList)

    OptAsterixList  go to state 185


State 185

   15 OptAsterixList: OptAsterixList . ASTERIX
   27 FormParListList: FormParListList ',' Type OptAsterixList . IDENT OptBrackets

    IDENT    shift, and go to state 186
    ASTERIX  shift, and go to state 21


State 186

   27 FormParListList: FormParListList ',' Type OptAsterixList IDENT . OptBrackets

    '['  shift, and go to state 163

    $default  reduce using rule 24 (OptBrackets)

    OptBrackets  go to state 187


State 187

   27 FormParListList: FormParListList ',' Type OptAsterixList IDENT OptBrackets .

    $default  reduce using rule 27 (FormParListList)
